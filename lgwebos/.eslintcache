[{"C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\index.js":"1","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\App\\App.js":"2","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\routes\\Home.js":"3","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\routes\\Search.js":"4","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\components\\Navigation.js":"5","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\components\\Movie.js":"6","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\components\\SearchMovie.js":"7","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\api.js":"8"},{"size":284,"mtime":1627622918794,"results":"9","hashOfConfig":"10"},{"size":1258,"mtime":1627637837507,"results":"11","hashOfConfig":"10"},{"size":1303,"mtime":1627637020294,"results":"12","hashOfConfig":"10"},{"size":2531,"mtime":1627629288828,"results":"13","hashOfConfig":"10"},{"size":872,"mtime":1627629288819,"results":"14","hashOfConfig":"10"},{"size":1458,"mtime":1627637837521,"results":"15","hashOfConfig":"10"},{"size":1202,"mtime":1627549260465,"results":"16","hashOfConfig":"10"},{"size":440,"mtime":1627549260456,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h2a9tu",{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\index.js",[],"C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\App\\App.js",["39","40","41","42","43"],"C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\routes\\Home.js",[],["44","45","46"],"C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\routes\\Search.js",["47","48","49"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport SearchMovie from '../components/SearchMovie';\r\nimport \"./Home.css\";\r\nimport \"./Search.css\";\r\nimport { naverMoviesApi } from '../api';\r\nimport Button from '@enact/ui/Button';\r\n\r\nimport css from '../App/App.module.less'\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n    value: \"\"\r\n  };\r\n\r\n  getSearchMovie = async () => {\r\n    console.log('search Movie');\r\n    const ID_KEY = '8Vvb7DBOvvsZIYgsczX9';\r\n    const SECRET_KEY = 'Y1Me6jzYf2';\r\n    const search = this.state.value;\r\n\r\n    try {\r\n      if (search === \"\") {\r\n        this.setState({ movies: [], isLoading: false })\r\n      } else {\r\n        const { data: {\r\n          items\r\n        } } = await axios.get('/v1/search/movie.json', {\r\n          params: {\r\n            query: search,\r\n            display: 20\r\n          },\r\n          headers: {\r\n            'X-Naver-Client-id': ID_KEY,\r\n            'X-Naver-Client-Secret': SECRET_KEY\r\n          }\r\n        });\r\n\r\n        this.setState({ movies: items, isLoading: false })\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    //this.getSearchMovie();\r\n    this.getSearchMovie();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    //console.log(e.type + \":\", e.target.value);\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    //console.log(e.type + \":\", this.state.value);\r\n    e.preventDefault();\r\n    //this.getSearchMovie();\r\n    this.getSearchMovie();\r\n  };\r\n\r\n  render() {\r\n    const { movies, isLoading } = this.state;\r\n\r\n    return (<section className=\"container\">\r\n      {\r\n        isLoading\r\n          ? (<div className=\"loader\">\r\n            <span className=\"loader__text\">Loading..{this.state.name}</span>\r\n          </div>)\r\n          : (<form onSubmit={this.handleSubmit}>\r\n\r\n            <input className=\"input_search\" type=\"text\" value={this.state.value} onChange={this.handleChange} placeholder=\"Search for a movie.\" />\r\n            <button type=\"submit\"><img className={css.test} src=\"https://image.flaticon.com/icons/png/64/483/483356.png\"></img></button>\r\n\r\n            <div className=\"movies\">\r\n              {movies.map(movie => (<SearchMovie key={movie.link} id={movie.link} year={movie.pubDate} title={movie.title} poster={movie.image} rating={movie.userRating} director={movie.director} actor={movie.actor} />))}\r\n            </div>\r\n          </form>)\r\n      }\r\n    </section>);\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\components\\Navigation.js",["50"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation(){\r\n    return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/categories\">Categories</Link>\r\n      <Link to=\"/search\">Search</Link>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;\r\n","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\components\\Movie.js",["51","52"],"import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, year, title, summary, poster, genres, rating}) {\r\n  return (\r\n    <div className=\"movie\">\r\n    <Link to={{\r\n          pathname: `/movie/detail/${id}`,\r\n          state:{\r\n            id,\r\n            year,\r\n            title,\r\n            summary,\r\n            poster,\r\n            genres,\r\n            rating\r\n          }\r\n    }}>\r\n      <img src={poster} alt={title} titlt={title}></img>\r\n    <div className=\"movie__data\">\r\n      <h3 className=\"movie__title\">{title}</h3>\r\n    <h4 className=\"movie__rating\">{rating}/10</h4>\r\n      <h5 className=\"movie__year\">{year}</h5>\r\n\r\n      {/* 장르&줄거리 */}\r\n      {/* <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n    <p className=\"movie__summary\">{summary.slice(0,180)}...</p> */}\r\n    </div>\r\n  </Link>\r\n  </div>\r\n  )\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  rating: PropTypes.number.isRequired\r\n\r\n};\r\n\r\nexport default Movie;\r\n","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\components\\SearchMovie.js",["53","54","55","56"],"import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction SearchMovie({id, year, title, poster, rating, director, actor}) {\r\n  return (\r\n    <div className=\"movie\">\r\n    <a href={id} target=\"_blank\">\r\n      <img src={poster} alt={title} titlt={title}></img>\r\n    <div className=\"movie__data\">\r\n      <h3 className=\"movie__title\">{\r\n          title.replace(/<b>/gi,\"\").replace(/<\\/b>/gi,\"\")\r\n        }</h3>\r\n      <p className=\"movie__rating\">\r\n        <span>rating</span> {rating}/10\r\n      </p>\r\n      <p className=\"movie__year\">\r\n        <span>year</span> {year}\r\n      </p>\r\n    <p className=\"movie__director\">\r\n      <span>director</span> {director}\r\n    </p>\r\n    <p className=\"movie__actor\">\r\n      <span>actor</span> {actor}\r\n    </p>\r\n    </div>\r\n  </a>\r\n  </div>\r\n  )\r\n};\r\n\r\nSearchMovie.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  year: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  rating: PropTypes.string.isRequired,\r\n  director: PropTypes.string.isRequired,\r\n  actor: PropTypes.string.isRequired\r\n\r\n};\r\n\r\nexport default SearchMovie;\r\n","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\api.js",[],{"ruleId":"57","severity":1,"message":"58","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":28,"column":6,"nodeType":"63","endLine":28,"endColumn":94,"fix":"64"},{"ruleId":"65","severity":1,"message":"66","line":29,"column":1,"nodeType":"67","messageId":"68","endLine":29,"endColumn":7,"fix":"69"},{"ruleId":"65","severity":1,"message":"66","line":38,"column":1,"nodeType":"67","messageId":"68","endLine":38,"endColumn":6,"fix":"70"},{"ruleId":"65","severity":1,"message":"66","line":41,"column":1,"nodeType":"67","messageId":"68","endLine":41,"endColumn":5,"fix":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"57","severity":1,"message":"78","line":6,"column":9,"nodeType":"59","messageId":"60","endLine":6,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":78,"column":47,"nodeType":"63","endLine":78,"endColumn":134},{"ruleId":"61","severity":1,"message":"62","line":78,"column":47,"nodeType":"63","endLine":78,"endColumn":134,"fix":"81"},{"ruleId":"57","severity":1,"message":"82","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":13},{"ruleId":"57","severity":1,"message":"82","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":13},{"ruleId":"61","severity":1,"message":"62","line":22,"column":7,"nodeType":"63","endLine":22,"endColumn":51,"fix":"83"},{"ruleId":"57","severity":1,"message":"82","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":13},{"ruleId":"57","severity":1,"message":"84","line":2,"column":9,"nodeType":"59","messageId":"60","endLine":2,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":9,"column":18,"nodeType":"87","endLine":9,"endColumn":33},{"ruleId":"61","severity":1,"message":"62","line":10,"column":7,"nodeType":"63","endLine":10,"endColumn":51,"fix":"88"},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react/self-closing-comp","Empty components are self-closing","JSXOpeningElement",{"range":"89","text":"90"},"no-trailing-spaces","Trailing spaces not allowed.","Program","trailingSpace",{"range":"91","text":"92"},{"range":"93","text":"92"},{"range":"94","text":"92"},"no-catch-shadow",["95"],"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"'naverMoviesApi' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"98","text":"90"},"'React' is defined but never used.",{"range":"99","text":"90"},"'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"range":"100","text":"90"},[863,888]," />",[866,872],"",[1090,1095],[1125,1129],"no-shadow","no-global-assign","no-unsafe-negation",[2233,2240],[551,558],[331,338]]