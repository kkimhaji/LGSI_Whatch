[{"C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\index.js":"1","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\App\\App.js":"2","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\routes\\Home.js":"3","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\routes\\Search.js":"4","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\components\\Navigation.js":"5","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\components\\Movie.js":"6","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\components\\SearchMovie.js":"7","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\api.js":"8"},{"size":284,"mtime":1627622918794,"results":"9","hashOfConfig":"10"},{"size":4480,"mtime":1627629288801,"results":"11","hashOfConfig":"10"},{"size":1303,"mtime":1627629288823,"results":"12","hashOfConfig":"10"},{"size":2531,"mtime":1627629288828,"results":"13","hashOfConfig":"10"},{"size":872,"mtime":1627629288819,"results":"14","hashOfConfig":"10"},{"size":1439,"mtime":1627629288812,"results":"15","hashOfConfig":"10"},{"size":1202,"mtime":1627549260465,"results":"16","hashOfConfig":"10"},{"size":440,"mtime":1627549260456,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h2a9tu",{"filePath":"20","messages":"21","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\index.js",[],"C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\App\\App.js",["38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58"],"C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\routes\\Home.js",[],["59","60","61"],"C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\routes\\Search.js",["62","63","64"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport SearchMovie from '../components/SearchMovie';\r\nimport \"./Home.css\";\r\nimport \"./Search.css\";\r\nimport { naverMoviesApi } from '../api';\r\nimport Button from '@enact/ui/Button';\r\n\r\nimport css from '../App/App.module.less'\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n    value: \"\"\r\n  };\r\n\r\n  getSearchMovie = async () => {\r\n    console.log('search Movie');\r\n    const ID_KEY = '8Vvb7DBOvvsZIYgsczX9';\r\n    const SECRET_KEY = 'Y1Me6jzYf2';\r\n    const search = this.state.value;\r\n\r\n    try {\r\n      if (search === \"\") {\r\n        this.setState({ movies: [], isLoading: false })\r\n      } else {\r\n        const { data: {\r\n          items\r\n        } } = await axios.get('/v1/search/movie.json', {\r\n          params: {\r\n            query: search,\r\n            display: 20\r\n          },\r\n          headers: {\r\n            'X-Naver-Client-id': ID_KEY,\r\n            'X-Naver-Client-Secret': SECRET_KEY\r\n          }\r\n        });\r\n\r\n        this.setState({ movies: items, isLoading: false })\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    //this.getSearchMovie();\r\n    this.getSearchMovie();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    //console.log(e.type + \":\", e.target.value);\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    //console.log(e.type + \":\", this.state.value);\r\n    e.preventDefault();\r\n    //this.getSearchMovie();\r\n    this.getSearchMovie();\r\n  };\r\n\r\n  render() {\r\n    const { movies, isLoading } = this.state;\r\n\r\n    return (<section className=\"container\">\r\n      {\r\n        isLoading\r\n          ? (<div className=\"loader\">\r\n            <span className=\"loader__text\">Loading..{this.state.name}</span>\r\n          </div>)\r\n          : (<form onSubmit={this.handleSubmit}>\r\n\r\n            <input className=\"input_search\" type=\"text\" value={this.state.value} onChange={this.handleChange} placeholder=\"Search for a movie.\" />\r\n            <button type=\"submit\"><img className={css.test} src=\"https://image.flaticon.com/icons/png/64/483/483356.png\"></img></button>\r\n\r\n            <div className=\"movies\">\r\n              {movies.map(movie => (<SearchMovie key={movie.link} id={movie.link} year={movie.pubDate} title={movie.title} poster={movie.image} rating={movie.userRating} director={movie.director} actor={movie.actor} />))}\r\n            </div>\r\n          </form>)\r\n      }\r\n    </section>);\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\components\\Navigation.js",["65"],"import React from 'react'; //eslint-disable-line no-unused-vars\r\nimport {Link} from 'react-router-dom';\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation(){\r\n    return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Comedy</Link>\r\n      <Link to=\"/\">Romance</Link>\r\n      <Link to=\"/\">Drama</Link>\r\n      <Link to=\"/\">Animation</Link>\r\n      <Link to=\"/\">Comedy-Romance</Link>\r\n      <Link to=\"/\">Sci-Fi</Link>\r\n      <Link to=\"/\">Action</Link>\r\n      <Link to=\"/\">Mystery</Link>\r\n      <Link to=\"/\">Adventure</Link>\r\n      <Link to=\"/\">Action-Comedy</Link>\r\n      <Link to=\"/\">Horror</Link>\r\n      <Link to=\"/\">Thriller</Link>\r\n      <Link to=\"/\">Crime</Link>\r\n      <Link to=\"/\">Fantasy</Link>\r\n      <Link to=\"/\">Superhero</Link>\r\n      <Link to=\"/\">Netflix upcoming</Link>\r\n      <Link to=\"/\">Netflix leaving</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation;","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\components\\Movie.js",["66","67"],"import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, year, title, summary, poster, genres, rating}) {\r\n  return (\r\n    <div className=\"movie\">\r\n    <Link to={{\r\n          pathname: `/movie/detail/${id}`,\r\n          state:{\r\n            id,\r\n            year,\r\n            title,\r\n            summary,\r\n            poster,\r\n            genres,\r\n            rating\r\n          }\r\n    }}>\r\n      <img src={poster} alt={title} titlt={title}></img>\r\n    <div className=\"movie__data\">\r\n      <h3 className=\"movie__title\">{title}</h3>\r\n    <h4 className=\"movie__rating\">{rating}/10</h4>\r\n      <h5 className=\"movie__year\">{year}</h5>\r\n\r\n      {/* 장르&줄거리 */}\r\n      {/* <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n    <p className=\"movie__summary\">{summary.slice(0,180)}...</p> */}\r\n    </div>\r\n  </Link>\r\n  </div>\r\n  )\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  rating: PropTypes.number.isRequired\r\n\r\n};\r\n\r\nexport default Movie;\r\n","C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\components\\SearchMovie.js",["68","69","70","71"],"C:\\Users\\rmfos\\Documents\\GitHub\\LGSI_Whatch\\lgwebos\\src\\api.js",[],{"ruleId":"72","severity":1,"message":"73","line":31,"column":24,"nodeType":"74","endLine":31,"endColumn":36,"fix":"75"},{"ruleId":"72","severity":1,"message":"73","line":32,"column":24,"nodeType":"74","endLine":32,"endColumn":36,"fix":"76"},{"ruleId":"77","severity":1,"message":"78","line":37,"column":8,"nodeType":"79","endLine":37,"endColumn":113},{"ruleId":"77","severity":1,"message":"78","line":41,"column":8,"nodeType":"79","endLine":41,"endColumn":113},{"ruleId":"77","severity":1,"message":"78","line":45,"column":8,"nodeType":"79","endLine":45,"endColumn":113},{"ruleId":"77","severity":1,"message":"78","line":49,"column":8,"nodeType":"79","endLine":49,"endColumn":113},{"ruleId":"77","severity":1,"message":"78","line":58,"column":31,"nodeType":"79","endLine":58,"endColumn":143},{"ruleId":"77","severity":1,"message":"78","line":59,"column":31,"nodeType":"79","endLine":59,"endColumn":144},{"ruleId":"77","severity":1,"message":"78","line":60,"column":31,"nodeType":"79","endLine":60,"endColumn":142},{"ruleId":"77","severity":1,"message":"78","line":61,"column":31,"nodeType":"79","endLine":61,"endColumn":146},{"ruleId":"77","severity":1,"message":"78","line":62,"column":31,"nodeType":"79","endLine":62,"endColumn":151},{"ruleId":"77","severity":1,"message":"78","line":64,"column":31,"nodeType":"79","endLine":64,"endColumn":143},{"ruleId":"77","severity":1,"message":"78","line":65,"column":31,"nodeType":"79","endLine":65,"endColumn":143},{"ruleId":"77","severity":1,"message":"78","line":66,"column":31,"nodeType":"79","endLine":66,"endColumn":144},{"ruleId":"77","severity":1,"message":"78","line":67,"column":31,"nodeType":"79","endLine":67,"endColumn":146},{"ruleId":"77","severity":1,"message":"78","line":68,"column":31,"nodeType":"79","endLine":68,"endColumn":150},{"ruleId":"77","severity":1,"message":"78","line":70,"column":31,"nodeType":"79","endLine":70,"endColumn":143},{"ruleId":"77","severity":1,"message":"78","line":71,"column":31,"nodeType":"79","endLine":71,"endColumn":145},{"ruleId":"77","severity":1,"message":"78","line":72,"column":31,"nodeType":"79","endLine":72,"endColumn":142},{"ruleId":"77","severity":1,"message":"78","line":73,"column":31,"nodeType":"79","endLine":73,"endColumn":144},{"ruleId":"77","severity":1,"message":"78","line":74,"column":31,"nodeType":"79","endLine":74,"endColumn":146},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":6,"column":9,"nodeType":"88","messageId":"89","endLine":6,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":78,"column":47,"nodeType":"79","endLine":78,"endColumn":134},{"ruleId":"90","severity":1,"message":"91","line":78,"column":47,"nodeType":"79","endLine":78,"endColumn":134,"fix":"92"},{"ruleId":"86","severity":1,"message":"93","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"93","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":21,"column":7,"nodeType":"79","endLine":21,"endColumn":51,"fix":"94"},{"ruleId":"86","severity":1,"message":"93","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"95","line":2,"column":9,"nodeType":"88","messageId":"89","endLine":2,"endColumn":13},{"ruleId":"96","severity":1,"message":"97","line":9,"column":18,"nodeType":"74","endLine":9,"endColumn":33},{"ruleId":"90","severity":1,"message":"91","line":10,"column":7,"nodeType":"79","endLine":10,"endColumn":51,"fix":"98"},"react/jsx-boolean-value","Value must be omitted for boolean attributes","JSXAttribute",{"range":"99","text":"100"},{"range":"101","text":"100"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-catch-shadow",["102"],"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'naverMoviesApi' is defined but never used.","Identifier","unusedVar","react/self-closing-comp","Empty components are self-closing",{"range":"105","text":"106"},"'React' is defined but never used.",{"range":"107","text":"106"},"'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",{"range":"108","text":"106"},[885,892],"",[941,948],"no-shadow","no-global-assign","no-unsafe-negation",[2233,2240]," />",[532,539],[331,338]]